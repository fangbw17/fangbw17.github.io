import{_ as s,o as a,c as l,M as n}from"./chunks/framework.61c7cfea.js";const o="/assets/intro.6828ac73.png",p="/assets/npx-eslint.3c5bec0e.png",h=JSON.parse('{"title":"ESLint","description":"","frontmatter":{},"headers":[],"relativePath":"other/eslint.md","filePath":"other/eslint.md"}'),e={name:"other/eslint.md"},t=n('<h1 id="eslint" tabindex="-1">ESLint <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;ESLint&quot;">​</a></h1><p><img src="'+o+'" alt="介绍"></p><h2 id="_1-安装并使用" tabindex="-1">1. 安装并使用 <a class="header-anchor" href="#_1-安装并使用" aria-label="Permalink to &quot;1. 安装并使用&quot;">​</a></h2><p>在命令行中安装并配置 ESLint:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@eslint/config</span></span></code></pre></div><p><strong>在安装 ESLint 之前确保存在 package.json 文件。</strong> package.json 可以手动创建文件，也可以通过 <code>npm init</code> 或 <code>yarn init</code> 来创建。</p><h3 id="_1-1-安装过程" tabindex="-1">1.1 安装过程 <a class="header-anchor" href="#_1-1-安装过程" aria-label="Permalink to &quot;1.1 安装过程&quot;">​</a></h3><p>在终端中输入 <code>npm init @eslint/config</code> 之后, 会出现如下过程:</p><ul><li>使用 ESLint 做什么? <ul><li>仅检查语法</li><li>检查语法并找出问题</li><li>检查语法，找出问题并且修复代码样式</li></ul></li><li>选择 JS 模块导入方式 <ul><li>ES6 的 import/export</li><li>CommonJS 的 require/exports</li><li>其他</li></ul></li><li>项目中使用了哪种框架？ <ul><li>React</li><li>Vue</li><li>其他</li></ul></li><li>是否使用 TS?</li><li>代码执行的宿主环境 <ul><li>浏览器</li><li>node</li></ul></li><li>使用哪种风格样式？ <ul><li>主流样式</li><li>通过回答问题形成一种风格</li></ul></li><li>主流样式中的哪一种? <ul><li>Airbnb</li><li>Standard</li><li>Google</li><li>XO</li></ul></li><li>指定 ESLint 配置文件的类型 <ul><li>JavaScript</li><li>YAML</li><li>JSON</li></ul></li><li>以上功能需要某些 npm 模块，是否安装</li><li>哪种方式安装？ <ul><li>npm</li><li>yarn</li><li>pnpm</li></ul></li></ul><h3 id="_1-2-使用" tabindex="-1">1.2 使用 <a class="header-anchor" href="#_1-2-使用" aria-label="Permalink to &quot;1.2 使用&quot;">​</a></h3><p>安装完成之后就可以简单使用：<code>npx eslint &lt;filename/direction&gt;</code> 或在 package.json 中配置</p><div class="language-JSON"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">eslint &lt;filename/direction&gt;</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>使用 <code>npx eslint ./src/index.js</code>，如下图所示： <img src="'+p+`" alt="npx"></p><ol><li><code>a</code> 未被使用</li><li>结尾需要换行</li></ol><p>使用 <code>npm run eslint</code>, 如下图所示</p><h2 id="_2-配置-eslint" tabindex="-1">2 配置 ESLint <a class="header-anchor" href="#_2-配置-eslint" aria-label="Permalink to &quot;2 配置 ESLint&quot;">​</a></h2><h3 id="_2-1-配置文件" tabindex="-1">2.1 配置文件 <a class="header-anchor" href="#_2-1-配置文件" aria-label="Permalink to &quot;2.1 配置文件&quot;">​</a></h3><p>ESLint 支持几种格式的配置文件：</p><p><strong>JavaScript</strong> - 使用 <code>.eslintrc.js</code> 并导出包括配置的对象。 <strong>JavaScript(ESM)</strong> - 当在 JavaScript 包中运行 ESLint 时，且 <code>package.json</code> 中配置了 <code>&quot;type&quot;: &quot;module&quot;</code> 时，使用 <code>.eslintrc.cjs</code>。 <strong>YAML</strong> - 使用 <code>.eslintrc.yaml</code> 或 <code>.eslintrc.yml</code> 来定义配置结构。 <strong>JSON</strong> - 使用 .eslintrc.json 来定义配置结构。 <strong>package.json</strong> - 在 <code>package.json</code> 文件中创建 eslintConfig 属性并在那里定义配置。</p><p>配置文件优先级：</p><ol><li>.js</li><li>.cjs</li><li>.yaml</li><li>.yml</li><li>.json</li><li>package.json</li></ol><h3 id="_2-2-使用配置文件" tabindex="-1">2.2 使用配置文件 <a class="header-anchor" href="#_2-2-使用配置文件" aria-label="Permalink to &quot;2.2 使用配置文件&quot;">​</a></h3><ol><li>使用 <code>.eslintrc.*</code> 和 <code>package.json</code> 文件。ESLint 会自动检查文件的目录寻找配置文件，在其直系父目录中寻找，直到文件系统的根目录 (/)、当前用户的主目录 (~/) 或指定 <code>root: true</code>。</li><li>将配置文件保存在任意位置，使用 CLI 传参的形式</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">eslint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config.js</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span></span></code></pre></div><p><code>eslintrc</code> 配置主要分为以下几类：</p><ul><li>env: 指定的运行环境</li><li>extends: 扩展配置文件，继承另一个配置文件的所有特征（包括规则、插件和语言选项），相当于规则集合</li><li>globals: 执行过程中需要用到的额外全局变量</li><li>rules: 启用额外的规则，扩展（或覆盖）规则集</li><li>plugins: 第三方插件提供的规则，配置，环境等</li><li>parserOptions: 解析选项</li><li>parser: 解析器</li></ul><h3 id="_2-2-配置语言选项" tabindex="-1">2.2 配置语言选项 <a class="header-anchor" href="#_2-2-配置语言选项" aria-label="Permalink to &quot;2.2 配置语言选项&quot;">​</a></h3><p>JavaScript 存在着多个版本，每个版本所支持的语法和全局变量略有不同。ESLint 会让指定项目中 JavaScript 所使用的语言选项。也可以在项目中使用插件扩展 ESLint 支持的语言选项。</p><p>常见的环境如下：</p><ul><li>browser - 浏览器全局变量</li><li>node - node.js 的全局变量</li><li>commonjs - commonjs 全局变量</li><li>es6 - 添加所有除模块以外的 ECMAScript 2015 功能</li><li>es2016~2022 - 添加所有 ECMAScript 2016~2022 的全局变量，并自动将解析器选项 ecmaVersion 设置为 7~13。</li></ul><p>更加详细的环境查看<a href="https://eslint.org/docs/latest/use/configure/language-options" target="_blank" rel="noreferrer">官网</a></p><h4 id="_2-2-1-使用插件" tabindex="-1">2.2.1 使用插件 <a class="header-anchor" href="#_2-2-1-使用插件" aria-label="Permalink to &quot;2.2.1 使用插件&quot;">​</a></h4><p>如果想使用插件中的环境，在 plugins 中指定插件名称，然后在 evn 中设置没有前缀的插件名称，后面加上斜杠，再加上环境名称。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">example</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">example/custom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-3-配置全局变量" tabindex="-1">2.3 配置全局变量 <a class="header-anchor" href="#_2-3-配置全局变量" aria-label="Permalink to &quot;2.3 配置全局变量&quot;">​</a></h3><p>ESLint 在运行校验时依赖全局变量的。由于不同变量在不同的环境中可能不同，例如 JQuery 的 $，可能在校验时不会通过。这时就可以额外配置全局变量来设置。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">globals</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">writable</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">$$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">readonly</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><code>writable</code> 允许在打码中覆盖 $, 重新给 $ 赋值，<code>readonly</code> 不允许覆盖 $$。 也可以在环境中禁用某些变量。如在 ES6 中禁用 Promise</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">es6</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">globals</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Promise</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-3-解析器选项" tabindex="-1">2.3 解析器选项 <a class="header-anchor" href="#_2-3-解析器选项" aria-label="Permalink to &quot;2.3 解析器选项&quot;">​</a></h3><p>使用解析器可以指定想要的 JS 语言选项。env 启用指定版本语言的全局变量，parserOptions 启用指定版本语言的语法。如支持 ES6 语法不等于支持新的 ES6 全局变量。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">es6</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">parserOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">ecmaVersion</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 指定版本</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">sourceType</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">script</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// script 默认值，或 module</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">allowReserved</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 允许使用保留字作为标识符</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">ecmaFeatures</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">globalReturn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 允许全局范围内的 return 语句</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">impliedStrict</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 启用全局严格模式（如果es是5或更高版本）</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">jsx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 启用 jsx</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-4-配置规则" tabindex="-1">2.4 配置规则 <a class="header-anchor" href="#_2-4-配置规则" aria-label="Permalink to &quot;2.4 配置规则&quot;">​</a></h3><p>规则是 ESLint 的核心构建模块。校验代码语法是否符合期望，不符合期望改如何处理。ESLint 有很多的内置规则，还可以通过插件添加更多的规则。<br> 要改变规则的设置，可以把规则的值设置为以下一种：</p><ul><li><code>&quot;off&quot;</code> 或 <code>0</code> - 关闭规则</li><li><code>warn</code> 或 <code>1</code> - 启用并视作警告（不影响退出）</li><li><code>error</code> 或 <code>2</code> - 启用并视作错误（触发时退出代码为1）</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">eqeqeq</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">off</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">curly</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">quotes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">double</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-5-配置解析器" tabindex="-1">2.5 配置解析器 <a class="header-anchor" href="#_2-5-配置解析器" aria-label="Permalink to &quot;2.5 配置解析器&quot;">​</a></h3><p>默认情况下，ESLint 是使用 <code>ESPree</code> 作为解析器，可以在配置文件中指定使用不一样的解析器，只要解析器满足以下要求。</p><ol><li>必须是一个可以从使用解析器的配置文件中加载的 Node 模块。</li><li>必须符合解析器接口</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">parser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">esprima</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">semi</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-6-忽略文件" tabindex="-1">2.6 忽略文件 <a class="header-anchor" href="#_2-6-忽略文件" aria-label="Permalink to &quot;2.6 忽略文件&quot;">​</a></h3><p>可以在配置中指定忽略校验哪些文件或目录</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ignorePatterns</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">temp.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">**/vendor/*.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>也可以在项目的根目录下创建 <code>.eslintignore</code>文件来配置忽略</p>`,54),c=[t];function r(i,F,D,y,u,d){return a(),l("div",null,c)}const C=s(e,[["render",r]]);export{h as __pageData,C as default};
