import{_ as s,o as a,c as o,M as e}from"./chunks/framework.61c7cfea.js";const _=JSON.parse('{"title":"Symbols","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/symbol.md","filePath":"typescript/symbol.md"}'),l={name:"typescript/symbol.md"},n=e(`<h1 id="symbols" tabindex="-1">Symbols <a class="header-anchor" href="#symbols" aria-label="Permalink to &quot;Symbols&quot;">​</a></h1><p>ECMAScript 2015 加入了 <code>symbol</code> ，<code>symbol</code> 是基本数据，就像 <code>string</code> 和 <code>number</code> 一样。 <code>symbol</code> 通过 <code>Symbol</code> 构造函数创建</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// key 是可选的</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sym1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sym2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// false, Symbol 创建的是唯一的</span></span>
<span class="line"><span style="color:#A6ACCD;">sym1 </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> sym2</span></span></code></pre></div>`,3),t=[n];function p(c,r,y,i,d,m){return a(),o("div",null,t)}const C=s(l,[["render",p]]);export{_ as __pageData,C as default};
